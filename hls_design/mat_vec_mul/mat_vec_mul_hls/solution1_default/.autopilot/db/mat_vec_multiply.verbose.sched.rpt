

================================================================
== Vivado HLS Report for 'mat_vec_multiply'
================================================================
* Date:           Tue Apr 25 20:59:54 2023

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        mat_vec_mul_hls
* Solution:       solution1_default
* Product family: virtex7
* Target device:  xc7vx485t-ffg1157-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.035 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       98|       98| 0.980 us | 0.980 us |   98|   98|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                         |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name        |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- dot_prod_row           |       56|       56|        14|          -|          -|     4|    no    |
        | + dot_prod_column       |       12|       12|         3|          -|          -|     4|    no    |
        |- diagonal_vec_loop      |       40|       40|        10|          -|          -|     4|    no    |
        | + element_process_loop  |        8|        8|         2|          -|          -|     4|    no    |
        +-------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 6 
3 --> 4 2 
4 --> 5 
5 --> 3 
6 --> 7 
7 --> 8 6 
8 --> 7 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.18>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([16 x i32]* %mat_in) nounwind, !map !7"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4 x i32]* %vec_in) nounwind, !map !13"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4 x i32]* %accumulator) nounwind, !map !18"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([17 x i8]* @mat_vec_multiply_str) nounwind"   --->   Operation 12 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%dot_prod = alloca [16 x i32], align 4" [mat_vec_mul.cpp:6]   --->   Operation 13 'alloca' 'dot_prod' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_1 : Operation 14 [1/1] (1.18ns)   --->   "br label %1" [mat_vec_mul.cpp:11]   --->   Operation 14 'br' <Predicate = true> <Delay = 1.18>

State 2 <SV = 1> <Delay = 1.18>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%i_0 = phi i3 [ 0, %0 ], [ %i, %dot_prod_row_end ]"   --->   Operation 15 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.86ns)   --->   "%icmp_ln11 = icmp eq i3 %i_0, -4" [mat_vec_mul.cpp:11]   --->   Operation 16 'icmp' 'icmp_ln11' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) nounwind"   --->   Operation 17 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.18ns)   --->   "%i = add i3 %i_0, 1" [mat_vec_mul.cpp:11]   --->   Operation 18 'add' 'i' <Predicate = true> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "br i1 %icmp_ln11, label %.preheader.preheader, label %dot_prod_row_begin" [mat_vec_mul.cpp:11]   --->   Operation 19 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str) nounwind" [mat_vec_mul.cpp:11]   --->   Operation 20 'specloopname' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str) nounwind" [mat_vec_mul.cpp:11]   --->   Operation 21 'specregionbegin' 'tmp' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%tmp_2 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %i_0, i2 0)" [mat_vec_mul.cpp:13]   --->   Operation 22 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln12 = zext i5 %tmp_2 to i6" [mat_vec_mul.cpp:12]   --->   Operation 23 'zext' 'zext_ln12' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.18ns)   --->   "br label %2" [mat_vec_mul.cpp:12]   --->   Operation 24 'br' <Predicate = (!icmp_ln11)> <Delay = 1.18>
ST_2 : Operation 25 [1/1] (1.18ns)   --->   "br label %.preheader" [mat_vec_mul.cpp:18]   --->   Operation 25 'br' <Predicate = (icmp_ln11)> <Delay = 1.18>

State 3 <SV = 2> <Delay = 2.79>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%j_0 = phi i3 [ 0, %dot_prod_row_begin ], [ %j, %3 ]"   --->   Operation 26 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.86ns)   --->   "%icmp_ln12 = icmp eq i3 %j_0, -4" [mat_vec_mul.cpp:12]   --->   Operation 27 'icmp' 'icmp_ln12' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) nounwind"   --->   Operation 28 'speclooptripcount' 'empty_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (1.18ns)   --->   "%j = add i3 %j_0, 1" [mat_vec_mul.cpp:12]   --->   Operation 29 'add' 'j' <Predicate = true> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "br i1 %icmp_ln12, label %dot_prod_row_end, label %3" [mat_vec_mul.cpp:12]   --->   Operation 30 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i3 %j_0 to i64" [mat_vec_mul.cpp:13]   --->   Operation 31 'zext' 'zext_ln13' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln13_1 = zext i3 %j_0 to i6" [mat_vec_mul.cpp:13]   --->   Operation 32 'zext' 'zext_ln13_1' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (1.36ns)   --->   "%add_ln13 = add i6 %zext_ln12, %zext_ln13_1" [mat_vec_mul.cpp:13]   --->   Operation 33 'add' 'add_ln13' <Predicate = (!icmp_ln12)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln13_2 = zext i6 %add_ln13 to i64" [mat_vec_mul.cpp:13]   --->   Operation 34 'zext' 'zext_ln13_2' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%mat_in_addr = getelementptr [16 x i32]* %mat_in, i64 0, i64 %zext_ln13_2" [mat_vec_mul.cpp:13]   --->   Operation 35 'getelementptr' 'mat_in_addr' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 36 [2/2] (1.42ns)   --->   "%mat_in_load = load i32* %mat_in_addr, align 4" [mat_vec_mul.cpp:13]   --->   Operation 36 'load' 'mat_in_load' <Predicate = (!icmp_ln12)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%vec_in_addr = getelementptr [4 x i32]* %vec_in, i64 0, i64 %zext_ln13" [mat_vec_mul.cpp:13]   --->   Operation 37 'getelementptr' 'vec_in_addr' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 38 [2/2] (1.42ns)   --->   "%vec_in_load = load i32* %vec_in_addr, align 4" [mat_vec_mul.cpp:13]   --->   Operation 38 'load' 'vec_in_load' <Predicate = (!icmp_ln12)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str, i32 %tmp) nounwind" [mat_vec_mul.cpp:15]   --->   Operation 39 'specregionend' 'empty_4' <Predicate = (icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "br label %1" [mat_vec_mul.cpp:11]   --->   Operation 40 'br' <Predicate = (icmp_ln12)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 8.03>
ST_4 : Operation 41 [1/2] (1.42ns)   --->   "%mat_in_load = load i32* %mat_in_addr, align 4" [mat_vec_mul.cpp:13]   --->   Operation 41 'load' 'mat_in_load' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 42 [1/2] (1.42ns)   --->   "%vec_in_load = load i32* %vec_in_addr, align 4" [mat_vec_mul.cpp:13]   --->   Operation 42 'load' 'vec_in_load' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 43 [1/1] (6.61ns)   --->   "%mul_ln13 = mul nsw i32 %vec_in_load, %mat_in_load" [mat_vec_mul.cpp:13]   --->   Operation 43 'mul' 'mul_ln13' <Predicate = true> <Delay = 6.61> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.61> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 1.42>
ST_5 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([16 x i8]* @p_str1) nounwind" [mat_vec_mul.cpp:12]   --->   Operation 44 'specloopname' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 45 [1/1] (0.00ns)   --->   "%dot_prod_addr = getelementptr [16 x i32]* %dot_prod, i64 0, i64 %zext_ln13_2" [mat_vec_mul.cpp:13]   --->   Operation 45 'getelementptr' 'dot_prod_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 46 [1/1] (1.42ns)   --->   "store i32 %mul_ln13, i32* %dot_prod_addr, align 4" [mat_vec_mul.cpp:13]   --->   Operation 46 'store' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_5 : Operation 47 [1/1] (0.00ns)   --->   "br label %2" [mat_vec_mul.cpp:12]   --->   Operation 47 'br' <Predicate = true> <Delay = 0.00>

State 6 <SV = 2> <Delay = 1.18>
ST_6 : Operation 48 [1/1] (0.00ns)   --->   "%i1_0 = phi i3 [ %i_1, %diagonal_vec_loop_end ], [ 0, %.preheader.preheader ]"   --->   Operation 48 'phi' 'i1_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 49 [1/1] (0.86ns)   --->   "%icmp_ln18 = icmp eq i3 %i1_0, -4" [mat_vec_mul.cpp:18]   --->   Operation 49 'icmp' 'icmp_ln18' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 50 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) nounwind"   --->   Operation 50 'speclooptripcount' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 51 [1/1] (1.18ns)   --->   "%i_1 = add i3 %i1_0, 1" [mat_vec_mul.cpp:18]   --->   Operation 51 'add' 'i_1' <Predicate = true> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 52 [1/1] (0.00ns)   --->   "br i1 %icmp_ln18, label %6, label %diagonal_vec_loop_begin" [mat_vec_mul.cpp:18]   --->   Operation 52 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 53 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @p_str2) nounwind" [mat_vec_mul.cpp:18]   --->   Operation 53 'specloopname' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_6 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([18 x i8]* @p_str2) nounwind" [mat_vec_mul.cpp:18]   --->   Operation 54 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_6 : Operation 55 [1/1] (0.66ns)   --->   "%xor_ln20 = xor i3 %i1_0, -4" [mat_vec_mul.cpp:20]   --->   Operation 55 'xor' 'xor_ln20' <Predicate = (!icmp_ln18)> <Delay = 0.66> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 56 [1/1] (1.18ns)   --->   "br label %4" [mat_vec_mul.cpp:19]   --->   Operation 56 'br' <Predicate = (!icmp_ln18)> <Delay = 1.18>
ST_6 : Operation 57 [1/1] (0.00ns)   --->   "ret void" [mat_vec_mul.cpp:24]   --->   Operation 57 'ret' <Predicate = (icmp_ln18)> <Delay = 0.00>

State 7 <SV = 3> <Delay = 5.16>
ST_7 : Operation 58 [1/1] (0.00ns)   --->   "%j2_0 = phi i3 [ 0, %diagonal_vec_loop_begin ], [ %j_1, %5 ]"   --->   Operation 58 'phi' 'j2_0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln19 = zext i3 %j2_0 to i4" [mat_vec_mul.cpp:19]   --->   Operation 59 'zext' 'zext_ln19' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 60 [1/1] (0.86ns)   --->   "%icmp_ln19 = icmp eq i3 %j2_0, -4" [mat_vec_mul.cpp:19]   --->   Operation 60 'icmp' 'icmp_ln19' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 61 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) nounwind"   --->   Operation 61 'speclooptripcount' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 62 [1/1] (1.18ns)   --->   "%j_1 = add i3 %j2_0, 1" [mat_vec_mul.cpp:19]   --->   Operation 62 'add' 'j_1' <Predicate = true> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 63 [1/1] (0.00ns)   --->   "br i1 %icmp_ln19, label %diagonal_vec_loop_end, label %5" [mat_vec_mul.cpp:19]   --->   Operation 63 'br' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 64 [1/1] (1.18ns)   --->   "%add_ln20 = add i3 %i1_0, %j2_0" [mat_vec_mul.cpp:20]   --->   Operation 64 'add' 'add_ln20' <Predicate = (!icmp_ln19)> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node add_ln20_1)   --->   "%tmp_4 = call i1 @_ssdm_op_BitSelect.i1.i3.i32(i3 %add_ln20, i32 2)" [mat_vec_mul.cpp:20]   --->   Operation 65 'bitselect' 'tmp_4' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_7 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node add_ln20_1)   --->   "%select_ln20 = select i1 %tmp_4, i3 %xor_ln20, i3 %i1_0" [mat_vec_mul.cpp:20]   --->   Operation 66 'select' 'select_ln20' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node add_ln20_1)   --->   "%sext_ln20 = sext i3 %select_ln20 to i4" [mat_vec_mul.cpp:20]   --->   Operation 67 'sext' 'sext_ln20' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_7 : Operation 68 [1/1] (1.18ns) (out node of the LUT)   --->   "%add_ln20_1 = add i4 %zext_ln19, %sext_ln20" [mat_vec_mul.cpp:20]   --->   Operation 68 'add' 'add_ln20_1' <Predicate = (!icmp_ln19)> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 69 [1/1] (0.00ns)   --->   "%sext_ln20_1 = sext i4 %add_ln20_1 to i6" [mat_vec_mul.cpp:20]   --->   Operation 69 'sext' 'sext_ln20_1' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_7 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln20 = zext i3 %j2_0 to i64" [mat_vec_mul.cpp:20]   --->   Operation 70 'zext' 'zext_ln20' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_7 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_3 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %j2_0, i2 0)" [mat_vec_mul.cpp:20]   --->   Operation 71 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_7 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln20_1 = zext i5 %tmp_3 to i6" [mat_vec_mul.cpp:20]   --->   Operation 72 'zext' 'zext_ln20_1' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_7 : Operation 73 [1/1] (1.36ns)   --->   "%add_ln20_3 = add i6 %sext_ln20_1, %zext_ln20_1" [mat_vec_mul.cpp:20]   --->   Operation 73 'add' 'add_ln20_3' <Predicate = (!icmp_ln19)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 74 [1/1] (0.00ns)   --->   "%sext_ln20_2 = sext i6 %add_ln20_3 to i64" [mat_vec_mul.cpp:20]   --->   Operation 74 'sext' 'sext_ln20_2' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_7 : Operation 75 [1/1] (0.00ns)   --->   "%dot_prod_addr_1 = getelementptr [16 x i32]* %dot_prod, i64 0, i64 %sext_ln20_2" [mat_vec_mul.cpp:20]   --->   Operation 75 'getelementptr' 'dot_prod_addr_1' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_7 : Operation 76 [2/2] (1.42ns)   --->   "%dot_prod_load = load i32* %dot_prod_addr_1, align 4" [mat_vec_mul.cpp:20]   --->   Operation 76 'load' 'dot_prod_load' <Predicate = (!icmp_ln19)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_7 : Operation 77 [1/1] (0.00ns)   --->   "%accumulator_addr = getelementptr [4 x i32]* %accumulator, i64 0, i64 %zext_ln20" [mat_vec_mul.cpp:20]   --->   Operation 77 'getelementptr' 'accumulator_addr' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_7 : Operation 78 [2/2] (1.42ns)   --->   "%accumulator_load = load i32* %accumulator_addr, align 4" [mat_vec_mul.cpp:20]   --->   Operation 78 'load' 'accumulator_load' <Predicate = (!icmp_ln19)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_7 : Operation 79 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([18 x i8]* @p_str2, i32 %tmp_1) nounwind" [mat_vec_mul.cpp:22]   --->   Operation 79 'specregionend' 'empty_7' <Predicate = (icmp_ln19)> <Delay = 0.00>
ST_7 : Operation 80 [1/1] (0.00ns)   --->   "br label %.preheader" [mat_vec_mul.cpp:18]   --->   Operation 80 'br' <Predicate = (icmp_ln19)> <Delay = 0.00>

State 8 <SV = 4> <Delay = 4.48>
ST_8 : Operation 81 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([21 x i8]* @p_str3) nounwind" [mat_vec_mul.cpp:19]   --->   Operation 81 'specloopname' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 82 [1/2] (1.42ns)   --->   "%dot_prod_load = load i32* %dot_prod_addr_1, align 4" [mat_vec_mul.cpp:20]   --->   Operation 82 'load' 'dot_prod_load' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_8 : Operation 83 [1/2] (1.42ns)   --->   "%accumulator_load = load i32* %accumulator_addr, align 4" [mat_vec_mul.cpp:20]   --->   Operation 83 'load' 'accumulator_load' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_8 : Operation 84 [1/1] (1.63ns)   --->   "%add_ln20_2 = add nsw i32 %dot_prod_load, %accumulator_load" [mat_vec_mul.cpp:20]   --->   Operation 84 'add' 'add_ln20_2' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 85 [1/1] (1.42ns)   --->   "store i32 %add_ln20_2, i32* %accumulator_addr, align 4" [mat_vec_mul.cpp:20]   --->   Operation 85 'store' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_8 : Operation 86 [1/1] (0.00ns)   --->   "br label %4" [mat_vec_mul.cpp:19]   --->   Operation 86 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.18ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', mat_vec_mul.cpp:11) [11]  (1.18 ns)

 <State 2>: 1.18ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', mat_vec_mul.cpp:11) [11]  (0 ns)
	'add' operation ('i', mat_vec_mul.cpp:11) [14]  (1.18 ns)

 <State 3>: 2.79ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', mat_vec_mul.cpp:12) [23]  (0 ns)
	'add' operation ('add_ln13', mat_vec_mul.cpp:13) [32]  (1.37 ns)
	'getelementptr' operation ('mat_in_addr', mat_vec_mul.cpp:13) [34]  (0 ns)
	'load' operation ('mat_in_load', mat_vec_mul.cpp:13) on array 'mat_in' [36]  (1.43 ns)

 <State 4>: 8.04ns
The critical path consists of the following:
	'load' operation ('mat_in_load', mat_vec_mul.cpp:13) on array 'mat_in' [36]  (1.43 ns)
	'mul' operation ('mul_ln13', mat_vec_mul.cpp:13) [39]  (6.61 ns)

 <State 5>: 1.43ns
The critical path consists of the following:
	'getelementptr' operation ('dot_prod_addr', mat_vec_mul.cpp:13) [35]  (0 ns)
	'store' operation ('store_ln13', mat_vec_mul.cpp:13) of variable 'mul_ln13', mat_vec_mul.cpp:13 on array 'dot_prod', mat_vec_mul.cpp:6 [40]  (1.43 ns)

 <State 6>: 1.18ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', mat_vec_mul.cpp:18) [48]  (0 ns)
	'add' operation ('i', mat_vec_mul.cpp:18) [51]  (1.18 ns)

 <State 7>: 5.16ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', mat_vec_mul.cpp:19) [59]  (0 ns)
	'add' operation ('add_ln20', mat_vec_mul.cpp:20) [67]  (1.18 ns)
	'select' operation ('select_ln20', mat_vec_mul.cpp:20) [69]  (0 ns)
	'add' operation ('add_ln20_1', mat_vec_mul.cpp:20) [71]  (1.18 ns)
	'add' operation ('add_ln20_3', mat_vec_mul.cpp:20) [76]  (1.37 ns)
	'getelementptr' operation ('dot_prod_addr_1', mat_vec_mul.cpp:20) [78]  (0 ns)
	'load' operation ('dot_prod_load', mat_vec_mul.cpp:20) on array 'dot_prod', mat_vec_mul.cpp:6 [79]  (1.43 ns)

 <State 8>: 4.48ns
The critical path consists of the following:
	'load' operation ('dot_prod_load', mat_vec_mul.cpp:20) on array 'dot_prod', mat_vec_mul.cpp:6 [79]  (1.43 ns)
	'add' operation ('add_ln20_2', mat_vec_mul.cpp:20) [82]  (1.63 ns)
	'store' operation ('store_ln20', mat_vec_mul.cpp:20) of variable 'add_ln20_2', mat_vec_mul.cpp:20 on array 'accumulator' [83]  (1.43 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
